// <auto-generated />
using System;
using GroceryStore.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GroceryStore.Models.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20221219145351_InitProducts")]
    partial class InitProducts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.Property<int>("CategoriesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CategoriesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("CategoryProduct");

                    b.HasData(
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 1
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 2
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 3
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 4
                        },
                        new
                        {
                            CategoriesId = 5,
                            ProductsId = 4
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 5
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 6
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 6
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 7
                        },
                        new
                        {
                            CategoriesId = 1,
                            ProductsId = 8
                        },
                        new
                        {
                            CategoriesId = 4,
                            ProductsId = 8
                        },
                        new
                        {
                            CategoriesId = 2,
                            ProductsId = 9
                        });
                });

            modelBuilder.Entity("GroceryStore.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Sort")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Other",
                            Sort = 5
                        },
                        new
                        {
                            Id = 2,
                            Name = "Fruits",
                            Sort = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Vegetables",
                            Sort = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Drinks",
                            Sort = 3
                        },
                        new
                        {
                            Id = 5,
                            Name = "Meat",
                            Sort = 4
                        });
                });

            modelBuilder.Entity("GroceryStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ExternalPaymentId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PurchasedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingCity")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingCountry")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingPostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingStateOrProvince")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShippingStreet")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("GroceryStore.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductOptionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("GroceryStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CurrentInventory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<double?>("DiscountPrice")
                        .HasColumnType("REAL");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .UseCollation("NOCASE");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrentInventory = 100,
                            Description = "The Pringles potato chip is a snack food that was invented in 1967. The chip is made of potato flakes, vegetable oil, salt, and flavorings.",
                            ImageUrl = "Pringles.jpg",
                            Manufacturer = "Procter & Gamble",
                            Name = "Pringles",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 2,
                            Description = "This slice is from is a large, round, juicy melon with a light green rind and sweet, red flesh. It is a variety of the species Citrullus lanatus.",
                            ImageUrl = "WaterMelon.jpg",
                            Manufacturer = "South Africa",
                            Name = "WaterMelon Slice",
                            Price = 15.0
                        },
                        new
                        {
                            Id = 3,
                            CurrentInventory = 100,
                            Description = "The avocado is a tree native to Mexico and Central America. It is classified as a member of the flowering plant family Lauraceae.",
                            ImageUrl = "Avocado.jpg",
                            Manufacturer = "Mexico",
                            Name = "Avocado",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 4,
                            CurrentInventory = 100,
                            Description = "Beef stock is a stock made from beef bones, meat, and vegetables. It is used as a base for soups, sauces, and stews.",
                            ImageUrl = "BeefStock.jpg",
                            Manufacturer = "Unilever",
                            Name = "Beef Stock",
                            Price = 30.0
                        },
                        new
                        {
                            Id = 5,
                            CurrentInventory = 100,
                            Description = "Ananas comosus, commonly known as pineapple or ananas, is a tropical plant with an edible multiple fruit consisting of coalesced berries.",
                            ImageUrl = "Ananas.jpg",
                            Manufacturer = "Brazil",
                            Name = "PineApple",
                            Price = 15.0
                        },
                        new
                        {
                            Id = 6,
                            CurrentInventory = 100,
                            Description = "Valencia Abtal is a very popular drink among moroccan students. Due to its low price, and serving as a good dekka for mid class breaks.",
                            ImageUrl = "Abtal.jpg",
                            Manufacturer = "Valencia",
                            Name = "Abtal",
                            Price = 2.0
                        },
                        new
                        {
                            Id = 7,
                            Description = "Coca-Cola is a carbonated soft drink manufactured by The Coca-Cola Company. Originally intended as a patent medicine.",
                            DiscountPrice = 4.0,
                            ImageUrl = "CocaCola.jpg",
                            Manufacturer = "Coca-Cola Company",
                            Name = "Coca Cola",
                            Price = 5.0
                        },
                        new
                        {
                            Id = 8,
                            CurrentInventory = 100,
                            Description = "Asta Coffee is a brand of coffee produced by the Asta Coffee Company, a subsidiary of the Nestlé Group.",
                            DiscountPrice = 19.0,
                            ImageUrl = "Asta.jpg",
                            Manufacturer = "Nestlé",
                            Name = "Asta Coffee",
                            Price = 25.0
                        },
                        new
                        {
                            Id = 9,
                            CurrentInventory = 100,
                            Description = "Lettuce is most often used for salads, although it is also seen in other kinds of food, such as soups, sandwiches, and wraps.",
                            ImageUrl = "Lettuce.jpg",
                            Manufacturer = "Morocco",
                            Name = "Lettuce",
                            Price = 7.0
                        });
                });

            modelBuilder.Entity("GroceryStore.Models.ProductOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AdditionalCost")
                        .HasColumnType("REAL");

                    b.Property<int>("CurrentInventory")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOption");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            AdditionalCost = 5.0,
                            CurrentInventory = 60,
                            Name = "Medium",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 4,
                            AdditionalCost = 10.0,
                            CurrentInventory = 20,
                            Name = "Large",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 5,
                            AdditionalCost = 20.0,
                            CurrentInventory = 20,
                            Name = "Family Size",
                            ProductId = 1
                        },
                        new
                        {
                            Id = 6,
                            AdditionalCost = 0.0,
                            CurrentInventory = 20,
                            Name = "Small Can (33cl)",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 7,
                            AdditionalCost = 2.0,
                            CurrentInventory = 20,
                            Name = "Medium Bottle (50cl)",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 8,
                            AdditionalCost = 4.0,
                            CurrentInventory = 20,
                            Name = "Large Bottle (1L)",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 9,
                            AdditionalCost = 6.0,
                            CurrentInventory = 20,
                            Name = "X-Large Bottle (1.5L)",
                            ProductId = 7
                        },
                        new
                        {
                            Id = 10,
                            AdditionalCost = 8.0,
                            CurrentInventory = 20,
                            Name = "Family Size Bottle (2L)",
                            ProductId = 7
                        });
                });

            modelBuilder.Entity("GroceryStore.Models.ShoppingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ShoppingCarts");
                });

            modelBuilder.Entity("GroceryStore.Models.ShoppingCartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ProductOptionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShoppingCartId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ProductOptionId");

                    b.HasIndex("ShoppingCartId");

                    b.ToTable("ShoppingCartItem");
                });

            modelBuilder.Entity("CategoryProduct", b =>
                {
                    b.HasOne("GroceryStore.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroceryStore.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GroceryStore.Models.OrderItem", b =>
                {
                    b.HasOne("GroceryStore.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GroceryStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GroceryStore.Models.ProductOption", b =>
                {
                    b.HasOne("GroceryStore.Models.Product", "Product")
                        .WithMany("Options")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GroceryStore.Models.ShoppingCartItem", b =>
                {
                    b.HasOne("GroceryStore.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("GroceryStore.Models.ProductOption", "Option")
                        .WithMany()
                        .HasForeignKey("ProductOptionId");

                    b.HasOne("GroceryStore.Models.ShoppingCart", null)
                        .WithMany("Items")
                        .HasForeignKey("ShoppingCartId");

                    b.Navigation("Option");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("GroceryStore.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("GroceryStore.Models.Product", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("GroceryStore.Models.ShoppingCart", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
